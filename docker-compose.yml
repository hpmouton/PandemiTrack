version: '3.9'

services:
  zookeeper:
    image: zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    restart: always  # Added restart policy

  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 172.19.0.2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    restart: always  # Added restart policy

  spark-master:
    image: bitnami/spark:latest
    hostname: spark-master
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8080:8080" # Spark Master UI
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    volumes:
      - ./spark:/spark
    networks:
      - spark-net

  spark-worker-1:
    image: bitnami/spark:latest
    hostname: spark-worker-1
    container_name: spark-worker-1
    ports:
      - "8081:8081" # Spark Worker 1 UI
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
    networks:
      - spark-net

  spark-worker-2:
    image: bitnami/spark:latest
    hostname: spark-worker-2
    container_name: spark-worker-2
    ports:
      - "8082:8082" # Spark Worker 2 UI
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
    networks:
      - spark-net

networks:
  spark-net:
    driver: bridge
